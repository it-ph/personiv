{"version":3,"sources":["guest.module.js","guest.routes.js","controllers/wall-content-container.controller.js","controllers/wall-view.controller.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"guest.js","sourcesContent":["var guest = angular.module('guest', ['shared']);","guest\r\n\t.config(['$stateProvider', function($stateProvider){\r\n\t\t$stateProvider\r\n\t\t\t.state('wall', {\r\n\t\t\t\turl: '/',\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t'': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/guest/views/guest.view.html',\r\n\t\t\t\t\t\tcontroller: 'wallViewController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content-container@wall': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/shared/views/content-container.view.html',\r\n\t\t\t\t\t\tcontroller: 'wallContentContainerController',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'toolbar@wall': {\r\n\t\t\t\t\t\ttemplateUrl: '/app/guest/templates/toolbar.template.html',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'content@wall':{\r\n\t\t\t\t\t\ttemplateUrl: '/app/components/posts/templates/content/posts.template.html',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t}]);","guest\r\n\t.controller('wallContentContainerController', ['$scope', 'Helper', function($scope, Helper){\r\n\t\t$scope.$emit('closeSidenav');\r\n\r\n\t\t$scope.fetchComments = function(post){\r\n\t\t\tif(!post.comments)\r\n\t\t\t{\r\n\t\t\t\tvar query= {};\r\n\r\n\t\t\t\tquery.where = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'label':'post_id',\r\n\t\t\t\t\t\t'condition': '=',\r\n\t\t\t\t\t\t'value': post.id\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\r\n\t\t\t\tquery.with = [\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'relation':'user',\r\n\t\t\t\t\t\t'withTrashed':true,\r\n\t\t\t\t\t}\r\n\t\t\t\t]\r\n\t\t\t\tquery.paginate = 10;\r\n\r\n\t\t\t\tHelper.post('/comment/enlist', query)\r\n\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\tpost.comments = data.data;\r\n\t\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/*\r\n\t\t * Object for toolbar\r\n\t\t *\r\n\t\t*/\r\n\t\t$scope.toolbar = {};\r\n\r\n\t\t/* Action originates from toolbar */\r\n\t\t$scope.$on('search', function(){\r\n\t\t\t$scope.request.search = $scope.toolbar.searchText;\r\n\t\t\t$scope.refresh();\r\n\t\t});\r\n\r\n\t\t/* Listens for any request for refresh */\r\n\t\t$scope.$on('refresh', function(){\r\n\t\t\t$scope.request.search = null;\r\n\t\t\t$scope.$broadcast('close');\r\n\t\t\t$scope.refresh();\r\n\t\t});\r\n\r\n\t\t/* Formats every data in the paginated call */\r\n\t\tvar pushItem = function(data){\r\n\t\t\tdata.created_at = new Date(data.created_at);\r\n\t\t\tdata.chips = [];\r\n\r\n\t\t\tangular.forEach(data.hashtags, function(hashtag){\r\n\t\t\t\tdata.chips.push(hashtag.tag);\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tvar item = {};\r\n\r\n\t\t\titem.display = data.name;\r\n\r\n\t\t\t$scope.toolbar.items.push(item);\r\n\t\t}\r\n\r\n\t\t$scope.init = function(query){\r\n\t\t\t$scope.post = {};\r\n\t\t\t$scope.post.items = [];\r\n\t\t\t$scope.toolbar.items = [];\r\n\r\n\t\t\t// 2 is default so the next page to be loaded will be page 2 \r\n\t\t\t$scope.post.page = 2;\r\n\r\n\t\t\tHelper.post('/post/enlist', query)\r\n\t\t\t\t.success(function(data){\r\n\t\t\t\t\t$scope.post.details = data;\r\n\t\t\t\t\t$scope.post.items = data.data;\r\n\t\t\t\t\t$scope.post.show = true;\r\n\r\n\t\t\t\t\tif(data.data.length){\r\n\t\t\t\t\t\t// iterate over each record and set the format\r\n\t\t\t\t\t\tangular.forEach(data.data, function(item){\r\n\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t$scope.post.paginateLoad = function(){\r\n\t\t\t\t\t\t// kills the function if ajax is busy or pagination reaches last page\r\n\t\t\t\t\t\tif($scope.post.busy || ($scope.post.page > $scope.post.details.last_page)){\r\n\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Executes pagination call\r\n\t\t\t\t\t\t *\r\n\t\t\t\t\t\t*/\r\n\t\t\t\t\t\t// sets to true to disable pagination call if still busy.\r\n\t\t\t\t\t\t$scope.post.busy = true;\r\n\t\t\t\t\t\t$scope.isLoading = true;\r\n\t\t\t\t\t\t// Calls the next page of pagination.\r\n\t\t\t\t\t\tHelper.post('/post/enlist' + '?page=' + $scope.post.page, query)\r\n\t\t\t\t\t\t\t.success(function(data){\r\n\t\t\t\t\t\t\t\t// increment the page to set up next page for next AJAX Call\r\n\t\t\t\t\t\t\t\t$scope.post.page++;\r\n\r\n\t\t\t\t\t\t\t\t// iterate over each data then splice it to the data array\r\n\t\t\t\t\t\t\t\tangular.forEach(data.data, function(item, key){\r\n\t\t\t\t\t\t\t\t\tpushItem(item);\r\n\t\t\t\t\t\t\t\t\t$scope.post.items.push(item);\r\n\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t// Enables again the pagination call for next call.\r\n\t\t\t\t\t\t\t\t$scope.post.busy = false;\r\n\t\t\t\t\t\t\t\t$scope.isLoading = false;\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\t$scope.refresh = function(){\r\n\t\t\t$scope.isLoading = true;\r\n  \t\t\t$scope.post.show = false;\r\n\r\n  \t\t\t$scope.init($scope.request);\r\n\t\t};\r\n\r\n\t\t$scope.request = {};\r\n\r\n\t\t$scope.request.withTrashed = false;\r\n\t\t$scope.request.paginate = 10;\r\n\r\n\t\t$scope.request.with = [\r\n\t\t\t{\r\n\t\t\t\t'relation':'user',\r\n\t\t\t\t'withTrashed': false,\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'relation':'hashtags',\r\n\t\t\t\t'withTrashed': false,\t\r\n\t\t\t},\r\n\t\t];\r\n\t\t\r\n\t\t$scope.request.withCount = [\r\n\t\t\t{\r\n\t\t\t\t'relation':'comments',\r\n\t\t\t\t'withTrashed': false,\r\n\t\t\t}\r\n\t\t]\r\n\r\n\t\t$scope.request.whereNull = ['group_id'];\r\n\r\n\t\t$scope.request.orderBy = [\r\n\t\t\t{\r\n\t\t\t\t'column':'pinned',\r\n\t\t\t\t'order':'desc',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\t'column':'created_at',\r\n\t\t\t\t'order':'desc',\r\n\t\t\t},\t\r\n\t\t]\r\n\r\n\t\t$scope.isLoading = true;\r\n\t\t$scope.$broadcast('close');\r\n\r\n\t\t$scope.init($scope.request);\r\n\t}]);","guest\r\n\t.controller('wallViewController', ['$scope', '$mdMedia', '$mdDialog', '$mdSidenav', '$mdToast', 'Helper', function($scope, $mdMedia, $mdDialog, $mdSidenav, $mdToast, Helper){\r\n\t\t$scope.toggleSidenav = function(menuID){\r\n\t\t\t$mdSidenav(menuID).toggle();\r\n\t\t}\r\n\r\n\t\t$scope.menu = {};\r\n\r\n\t\tHelper.get('/link')\r\n\t\t\t.success(function(data){\r\n\t\t\t\t$scope.menu.static = data;\r\n\t\t\t})\r\n\t}]);"]}